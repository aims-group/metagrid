# Generated by Django 3.1.1 on 2020-10-30 18:37

from typing import TYPE_CHECKING

from django.db import migrations

if TYPE_CHECKING:
    from metagrid.projects.models import Facet, FacetGroup, Project


def insert_create_ip(apps, schema_editor):
    ProjectModel = apps.get_model("projects", "Project")  # type: Project
    FacetModel = apps.get_model("projects", "Facet")  # type: Facet
    FacetGroupModel = apps.get_model(
        "projects", "FacetGroup"
    )  # type: FacetGroup

    GROUPS = FacetGroupModel.objects.filter(
        name__in=["General", "Identifiers", "Classifications"]
    ).order_by("pk")

    project = {
        "name": "CREATE-IP",
        "full_name": "Collaborative REAnalysis Technical Environment",
        "description": "The Collaborative REAnalysis Technical Environment (CREATE) is a NASA Climate Model Data Services (CDS) project to collect all available global reanalysis data into one centralized location on NASAâ€™s NCCS Advanced Data Analytics Platform (ADAPT), standardizing data formats, providing analytic capabilities, visualization analysis capabilities, and overall improved access to multiple reanalysis datasets. The CREATE project encompasses two efforts - CREATE-IP and CREATE-V. CREATE-IP is the project that collects and formats the reanalyses data. The list of variables currently available in CREATE-IP is growing over time so please check back frequently.",
        "facets_by_group": {
            GROUPS[0]: [
                "project",
                "product",
                "institute",
                "model",
                "data_node",
            ],
            GROUPS[1]: ["experiment", "experiment_family", "source_id",],
            GROUPS[2]: [
                "realm",
                "time_frequency",
                "variable",
                "variable_long_name",
            ],
        },
    }

    new_project = ProjectModel(
        name=project.get("name"),
        full_name=project.get("full_name"),
        description=project.get("description"),
    )
    new_project.save()

    for group, facets, in project.get("facets_by_group").items():
        for facet in facets:
            FacetModel.objects.create(
                project=new_project, name=facet, group=group
            )


def reverse_insert_create_ip(apps, schema_editor):
    ProjectModel = apps.get_model("projects", "Project")  # type: Project
    ProjectModel.objects.get(name="CREATE-IP").delete()


class Migration(migrations.Migration):

    dependencies = [
        ("projects", "0014_auto_20200824_2231"),
    ]

    operations = [
        migrations.RunPython(insert_create_ip, reverse_insert_create_ip),
    ]
