# Generated by Django 3.1.1 on 2020-10-30 21:15
from typing import TYPE_CHECKING

from django.db import migrations

if TYPE_CHECKING:
    from metagrid.projects.models import Facet, FacetGroup

# These specific facets by project were identified as not being assigned
# the correct group. "old" is the incorrect group, and "new" is the
# correct group.
facets_to_fix = {
    "CMIP3": {"experiment": {"old": "General", "new": "Identifiers"}},
    "E3SM": {"model_version": {"old": "Identifiers", "new": "General"}},
    "input4MIPs": {
        "grid_label": {"old": "Classifications", "new": "Labels"},
        "nominal_resolution": {
            "old": "Classifications",
            "new": "Resolutions",
        },
    },
    "obs4MIPs": {"realm": {"old": "General", "new": "Classifications"}},
}


def fix_facets_groups(apps, schema_editor):
    """Fix the assigned group for specific project facets for consistency.
    """
    FacetModel = apps.get_model("projects", "Facet")  # type: Facet
    FacetGroupModel = apps.get_model(
        "projects", "FacetGroup"
    )  # type: FacetGroup

    for project_name, project_facets in facets_to_fix.items():
        for facet_name, group_name in project_facets.items():
            facet = FacetModel.objects.get(
                project__name=project_name,
                name=facet_name,
                group__name=group_name.get("old"),
            )
            new_group = FacetGroupModel.objects.get(name=group_name.get("new"))
            facet.group = new_group
            facet.save()


def reverse_fix_project_facets(apps, schema_editor):
    FacetModel = apps.get_model("projects", "Facet")  # type: Facet
    FacetGroupModel = apps.get_model(
        "projects", "FacetGroup"
    )  # type: FacetGroup

    for project_name, project_facets in facets_to_fix.items():
        for facet_name, group_name in project_facets.items():
            facet = FacetModel.objects.get(
                project__name=project_name,
                name=facet_name,
                group__name=group_name.get("new"),
            )
            new_group = FacetGroupModel.objects.get(name=group_name.get("old"))
            facet.group = new_group
            facet.save()


class Migration(migrations.Migration):

    dependencies = [
        ("projects", "0015_auto_20201030_1837"),
    ]

    operations = [
        migrations.RunPython(fix_facets_groups, reverse_fix_project_facets)
    ]
